#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: installServer [-h] [-f] [-b|-g|-t] [-s <snapshot-file-path>] <stone-name> <gemstone-version>

Install GemStone/S, create a stone, start the stone, create a todeClient
image. Runs the installGemstone, createTodeImage, createStone,
startStone, startNetldi, startStatmonitor, installTodeStone and
todeClient scripts.

If a stone named $stoneName exists, the existing directory will be left
alone unless the -f option is specified in which case the existing
stone directory is deleted.

If a todeClient image exists, the creation of a new image will be skipped
unless the -f option is specified in which case the todeClient image is
re-created.

OPTIONS
  -b
     create a base GemStone stone - use $GEMSTONE/bin/extent0.dbf. No additional
     code loaded and no tODE client created.
  -h
     display help
  -f
     force creation of stone and tode image
  -g
     create a GLASS/GsDevKit stone - use $GEMSTONE/bin/extent0.seaside.dbf. Update
     repository using gsUpgrader and no tODE client created
  -s <snapshot-file-path>
     Path to snapshot file used to create stone. Path may be a relative file path.
  -t
     [DEFAULT] create a tODE stone - use $GEMSTONE/bin/extent0.seaside.dbf. Update
     repository using gsUpgrader, then install tODE and create a tODE client.

EXAMPLES
   $(basename $0) -h
   $(basename $0) gs_327 3.2.7
   $(basename $0) -f gs_327 3.2.7

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi

forceArg=""
while getopts "fhns:" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    f) forceArg="-f";;
    *) usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

if [ $# -ne 2 ]; then
  usage; exit 1
fi
stoneName="$1"
gsvers="$2"

$GS_HOME/bin/installGemStone $gsvers

$GS_HOME/bin/createTodeImage $forceArg

$GS_HOME/bin/createStone $forceArg $stoneName $gsvers

if [ "${GS_TRAVIS}x" = "x" ] ; then
  $GS_HOME/bin/startStatmonitor $stoneName
else
  # running on travis server - statmonitor fails on startup (bug #44491)
  echo "skipping  $GS_HOME/bin/startStatmonitor $stoneName"
fi

$GS_HOME/bin/installTodeStone $stoneName

if [ "${GS_TRAVIS}x" = "x" ] ; then
  $GS_HOME/bin/todeClient
else
  # running on travis server - don't start todeClient
  echo "skipping $GS_HOME/bin/todeClient"
fi

echo "...finished $(basename $0)"

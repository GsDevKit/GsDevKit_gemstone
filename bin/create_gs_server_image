#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-f] [-v Pharo3.0 | Pharo4.0 ] \
                      -d <full-path-to-directory> \
		      gsDevKitCommandLine|gsDevKitTodeCommandLine

Create a gsDevKit image of the given type (gsDevKitCommand or todeCommand). 
Used for standard GsDevKit tasks that do not require tODE to be installed.

If the gsServer image already exists, the installation is skipped
unless the -f option is specified.

OPTIONS
  -h 
     display help
  -d <full-path-to-directory>
     <full-path-to-directory> specifies the directory into which the chosen
     pharo version is downloaded
  -f
     Force gsServer image installation, whether or not the image
     already exists.
  -v Pharo3.0 | Pharo4.0
     Choose the version of Pharo to use for the client. Default is Pharo3.0.

EXAMPLES
  $(basename $0) -h
  $(basename $0) -d \$GS_GS_SERVER_PHARO
  $(basename $0) -v Pharo3.0 -d \$GS_GS_SERVER_PHARO
  $(basename $0) -f -d \$GS_GS_SERVER_PHARO

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env

force=""
version="Pharo3.0"
directoryPath=""
while getopts ":fhv:" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    f) force="true";;
    d) directoryPath="${OPTARG}";;
    v) version="${OPTARG}";;
    *) usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

if [ $# -ne 1 ]; then
  usage; exit 1
fi
imageType=$1
shift 1

if [ "${directoryPath}x" = "x" ] ; then
  echo "required argument -d missing"
  usage; exit 1
fi

if [ ! -e "${directoryPath}/pharo" ] ; then 
  $GS_HOME/bin/private/downloadSmalltalkClient -v $version -d $directoryPath
fi

message="create"
if [ -e $directoryPath/gsServer.image ] ; then
  if [ "${force}x" = "x" ] ; then
    echo "gsServer image already created, use -f to force update"
    exit 0
  else
    message="update"
  fi
fi

case "$imageType" in
  gsDevKitCommandLine)
    loadScript=gsDevKitCommandLineLoad.st
    initialImageName=Pharo.image
    imageName=gsDevKitCommandLine.image
  ;;
  gsDevKitTodeCommandLine)
    if [ ! -e ${GS_GS_SERVER_PHARO}/gsDevKitCommandLine.image] ; then
      $GS_GS_SERVER/bin/create_gs_server_image -d $GS_GS_SERVER_PHARO gsDevKitCommandLine
    fi
    loadScript=gsDevKitTodeCommandLineLoad.st
    initialImageName=gsDevKitCommandLine.image
    imageName=gsDevKitDTodeCommandLine.image
  ;;
  *) usage; exit 1;;
esac

gs_serverLoadPath=$GS_SHARED_TODE/sys/default/pharo/$loadScript
if [ -e $GS_SHARED_TODE/sys/local/pharo/$loadScript ] ; then
  gs_serverLoadPath=$GS_SHARED_TODE/sys/local/pharo/$loadScript
fi

echo "${message} $imageName image using $gs_serverLoadPath"

if [ "${force}" = "true" ] ; then
  $directoryPath/pharo $directoryPath/$imageName save gsDevKitTmp
else
  $directoryPath/pharo $directoryPath/$initialImageName save gsDevKitTmp
fi

$directoryPath/pharo $directoryPath/gsDevKitTmp.image st --quit --save $gs_serverLoadPath

$directoryPath/pharo $directoryPath/gsDevKitTmp.image save $imageName
rm -f $directoryPath/gsDevKitTmp.*

echo
echo "...finished $(basename $0)"
